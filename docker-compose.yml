version: '3.8'

services:
# mineonlium node
  moth:
    image: gcr.io/mineonlium/moth
    pull_policy: always
    restart: unless-stopped
    ports:
      - 30303:30303
      - 30303:30303/udp
      - 8545:8545
      - 8546:8546
      - 8251:8551
    volumes:
      - ./data:/root/.ethereum
    user: root
    stop_signal: SIGINT
    stop_grace_period: 2m
    healthcheck:
      test: [ "CMD-SHELL", "geth attach --exec eth.blockNumber" ]
      interval: 10s
      timeout: 5s
      retries: 5
    command:
      - --http
      - --http.api=eth,net,web3,engine,admin
      - --http.addr=0.0.0.0
      - --http.vhosts=*
      - --http.corsdomain=*
      - --ws
      - --ws.origins=*
      - --ws.addr=0.0.0.0
      - --ws.api=eth,net,web3,miner
      - --graphql
      - --graphql.corsdomain=*
      - --graphql.vhosts=*
      - --authrpc.addr=0.0.0.0
      - --authrpc.vhosts=*
      - --authrpc.jwtsecret=/root/.ethereum/jwt.hex
      - --authrpc.port=8551
      - --txlookuplimit=0
      - --bootnodes=enode://da992785d5060b9e431a13fe0d2795e508121c31e7fbcae865f6ff2901fbdedcf8cd5950ac603d3691eb29dbe77de5ea6a395631744a52d299472b8b61a1c9d6@143.198.57.118:30303 , enode://ec3bd5272ce2abece7abe823c2a75f12568c99eaaa89cb154a6d87feed8847a52eb55c4f77e4ba7ef173fdfb8522ca712c964acc28736a9e8b51d7847d399f69@209.126.11.245:30303
      # - --mine
      # - --miner.etherbase=0xED87b75Dd703434519346f7bbb33DF70D3CFd6D6
    logging:
      driver: json-file
      options:
        max-size: 2m
        max-file: 10


# Blockscout postgres database
  db:
    image: postgres:14
    command: -c shared_buffers=1024MB -c max_connections=200
    restart: always
    container_name: 'postgres'
    healthcheck:
      test: [ "CMD", "pg_isready"]
      timeout: 45s
      interval: 10s
      retries: 10
    environment:
        POSTGRES_PASSWORD: ''
        POSTGRES_USER: 'postgres'
        POSTGRES_HOST_AUTH_METHOD: 'trust'
    # Uncomment the following line to persist the database 
    # Dont forget the volume in the bottom of the file as well
    volumes:
      - ./postgres-data:/var/lib/postgresql/data
    ports:
      - 7432:5432
    user: root

# # Redis db
  redis_db:
    image: 'redis:alpine'
    ports:
      - 6379:6379
    command: redis-server
    volumes:
      - redis-data:/data

# # Blockscout blockscanner
  blockscout:
    image: tmjeff/moscout
    restart: always
    depends_on:
      db:
        condition: service_healthy  
    container_name: 'blockscout'
    links:
      - db:database
    command: bash -c "bin/blockscout eval \"Elixir.Explorer.ReleaseTasks.create_and_migrate()\" && bin/blockscout start"
    extra_hosts:
      - 'host.docker.internal:host-gateway'
    # env_file:
    #   -  ./envs/common-blockscout.env
    environment:
        ETHEREUM_JSONRPC_VARIANT: 'geth'
        ETHEREUM_JSONRPC_HTTP_URL: http://moth:8545
        BLOCKSCOUT_HOST: 0.0.0.0
        PORT: 4000
        ETHEREUM_JSONRPC_WS_URL: ws://moth:8546/
        INDEXER_DISABLE_PENDING_TRANSACTIONS_FETCHER: 'true'
        FETCH_REWARDS_WAY: trace_block
        DATABASE_URL: postgresql://postgres:@db:5432/blockscout?ssl=false
        ECTO_USE_SSL: 'false'
        ETHEREUM_JSONRPC_TRACE_URL: http://moth:8545/
        INDEXER_CATCHUP_BLOCKS_BATCH_SIZE: 250
        # SECRET_KEY_BASE: '56NtB48ear7+wMSf0IQuWDAAazhpb31qyc7GiyspBP2vh7t5zlCsF5QDv76chXeN'
        CHAIN_ID: '54321'
        NETWORK: MineOnlium
        COIN_NAME: MO
    ports:
      - 4000:4000

#NOT WORKING!! i think im just missing the compilers 
# # Smart Contract Verification
  smart-contract-verifier:
    image: ghcr.io/blockscout/smart-contract-verifier:${SMART_CONTRACT_VERIFIER_DOCKER_TAG:-latest}
    restart: always
    ports:
      - 8043:8043

  # nginx:
  #   image: 'jc21/nginx-proxy-manager:latest'
  #   restart: unless-stopped
  #   ports:
  #     - '80:80'
  #     - '81:81'
  #     - '443:443'
  #   volumes:
  #     - nginx-data:/data
  #     - ./letsencrypt:/etc/letsencrypt


volumes:
   redis-data:
  #  nginx-data:
